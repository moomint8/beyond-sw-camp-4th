<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ohgiraffers.section01.xml.MenuMapper">
    <resultMap id="menuResultMap" type="com.ohgiraffers.section01.xml.MenuDTO">
        <id property="menuCode" column="menu_code"/>
        <result property="menuName" column="menu_name"/>
        <result property="menuPrice" column="menu_price"/>
        <result property="categoryCode" column="category_code"/>
        <result property="orderableStatus" column="orderable_status"/>
    </resultMap>

    <!--
        설명.
         OGNL(Object Graph Navigation Language)
         : single quotation('') 구간의 값은 리터럴 값으로 보고 그게 아닌 이름은 객체 필드 또는 변수로 인식하게 작성하는 기법이다.

        필기.
         1. gte(>=): greater than equal
         2. gt(>): greater than
         3. lte(<=): less than equal
         4. lt(>): less than
         5. eq(==): equal
         6. ne(!=): not equal
    -->
    <select id="selectMenuByPrice" parameterType="_int" resultMap="menuResultMap">
        select
               a.menu_code
             , a.menu_name
             , a.menu_price
             , a.category_code
             , a.orderable_status
          from tbl_menu a
         where a.orderable_status='Y'
        <if test="maxPrice gte 0 and maxPrice lte 10000">
            <![CDATA[
            and a.menu_price < #{ maxPrice }
            ]]>
        </if>
        <if test="maxPrice gt 10000 and maxPrice lte 20000">
            <![CDATA[
            and a.menu_price between 10000 and #{ maxPrice }
            ]]>
        </if>
        <if test="maxPrice gt 20000 and maxPrice lte 30000">
            <![CDATA[
            and a.menu_price between 20000 and #{ maxPrice }
            ]]>
        </if>
        <if test="maxPrice gt 30000">
            <![CDATA[
            and a.menu_price between 30000 and #{ maxPrice }
            ]]>
        </if>
    </select>

    <select id="searchMenu" parameterType="com.ohgiraffers.section01.xml.SearchCriteria" resultMap="menuResultMap">
        select
               a.menu_code
             , a.menu_name
             , a.menu_price
             , a.category_code
             , a.orderable_status
          from tbl_menu a

        <if test="condition == 'category'">
            join tbl_category b on (a.category_code = b.category_code)
        </if>

         where a.orderable_status='Y'

        <if test="condition == 'name'">
            and a.menu_name like concat('%', #{value}, '%')
        </if>
        <if test="condition == 'category'">
            and b.category_name = #{value}
        </if>
    </select>

    <select id="searchMenuBySubCategory" parameterType="com.ohgiraffers.section01.xml.SearchCriteria" resultMap="menuResultMap">
        select
        a.menu_code
        , a.menu_name
        , a.menu_price
        , a.category_code
        , a.orderable_status
        from tbl_menu a
        where a.orderable_status='Y'
        <choose>
            <when test="value == '식사'">
                and a.category_code in(4, 5, 6, 7)
            </when>
            <when test="value == '음료'">
                and a.category_code in(8, 9, 10)
            </when>
            <when test="value == '디저트'">
                and a.category_code in(11, 12)
            </when>
        </choose>
    </select>

    <select id="searchMenuByRandomMenuCode" resultMap="menuResultMap">
        select
               a.menu_code
             , a.menu_name
             , a.menu_price
             , a.category_code
             , a.orderable_status
          from tbl_menu a
         where a.orderable_status='Y'
           and a.menu_code in

        <!-- 설명. list 또는 map과 같은 컬렉션 타입으로 넘어온 값을 가지고 반복해서 원하는 sql을 작성할 수 있다. -->
        <foreach collection="list" item="menuCode" open="(" close=")" separator=", ">
            #{ menuCode }
        </foreach>



        <!-- 설명. 원하는 곳에 있는 메소드의 반환 값을 바로 활용할 수도 있다.(권장되진 않음) -->
<!--        <foreach collection="@com.ohgiraffers.section01.xml.Application@generateRandomMenuCodeList()"-->
<!--                 item="menuCode" open="(" close=")" separator=", ">-->
<!--            #{ menuCode }-->
<!--        </foreach>-->
    </select>

    <select id="searchMenuByCodeOrSearchAll"
            parameterType="com.ohgiraffers.section01.xml.SearchCriteria"
            resultMap="menuResultMap">
        select
               a.menu_code
             , a.menu_name
             , a.menu_price
             , a.category_code
             , a.orderable_status
          from tbl_menu a
        <if test="condition != null and condition eq 'menuCode'">
            where a.menu_code = #{ value }
        </if>
    </select>

    <select id="searchMenuByNameOrCategory"
            parameterType="hashmap"
            resultMap="menuResultMap">
        select
               a.menu_code
             , a.menu_name
             , a.menu_price
             , a.category_code
             , a.orderable_status
          from tbl_menu a
<!--        <where>-->
<!--            <if test="nameValue != null">-->
<!--                A.MENU_NAME LIKE CONCAT('%', #{ nameValue }, '%')-->
<!--            </if>-->
<!--            <if test="categoryValue != null">-->
<!--                AND A.CATEGORY_CODE = #{ categoryValue }-->
<!--            </if>-->
<!--        </where>-->
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <!--            앞에 다 WHERE을 붙이되 AND나 OR가 있는 것들도 다 WHERE로 바꿔줌-->
            <if test="nameValue != null">
                A.MENU_NAME LIKE CONCAT('%', #{ nameValue }, '%')
            </if>
            <if test="categoryValue != null">
                AND A.CATEGORY_CODE = #{ categoryValue }
            </if>
        </trim>
    </select>

    <update id="updateMenu" parameterType="hashmap">
        update
               tbl_menu
<!--        <set>-->
<!--            <if test="menuName != null and menuName != ''">-->
<!--               menu_name = #{ menuName }-->
<!--            </if>-->
<!--            <if test="orderableStatus != null and orderableStatus != ''">-->
<!--             , orderable_status = #{ orderableStatus }-->
<!--            </if>-->
<!--        </set>-->
        <trim prefix="SET" prefixOverrides=",">
            <if test="menuName != null and menuName != ''">
                MENU_NAME = #{menuName}
            </if>
            <if test="orderableStatus != null and orderableStatus != ''">
                , ORDERABLE_STATUS = #{orderableStatus}
            </if>
        </trim>
         where menu_code = #{ menuCode }
    </update>
</mapper>